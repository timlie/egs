<?php

/**
 * @file
 * Provides basic functionality for a ERPAL Core.
 */

/**
 * Return permission names for a given entity type.
 */
function erpal_core_entity_access_permissions($entity_type) {
  $entity_info = entity_get_info($entity_type);
  $labels = $entity_info['permission labels'];

  $permissions = array();

  // General 'administer' permission.
  $permissions['administer ' . $entity_type . ' entities'] = array(
    'title' => t('Administer @entity_type', array('@entity_type' => $labels['plural'])),
    'description' => t('Allows users to perform any action on @entity_type.', array('@entity_type' => $labels['plural'])),
    'restrict access' => TRUE,
  );

  // Generic create and edit permissions.
  $permissions['create ' . $entity_type . ' entities'] = array(
    'title' => t('Create @entity_type of any type', array('@entity_type' => $labels['plural'])),
  );
  if (!empty($entity_info['access arguments']['user key'])) {
    $permissions['edit own ' . $entity_type . ' entities'] = array(
      'title' => t('Edit own @entity_type of any type', array('@entity_type' => $labels['plural'])),
    );
  }
  $permissions['edit any ' . $entity_type . ' entity'] = array(
    'title' => t('Edit any @entity_type of any type', array('@entity_type' => $labels['singular'])),
    'restrict access' => TRUE,
  );
  if (!empty($entity_info['access arguments']['user key'])) {
    $permissions['view own ' . $entity_type . ' entities'] = array(
      'title' => t('View own @entity_type of any type', array('@entity_type' => $labels['plural'])),
    );
  }
  $permissions['view any ' . $entity_type . ' entity'] = array(
    'title' => t('View any @entity_type of any type', array('@entity_type' => $labels['singular'])),
    'restrict access' => TRUE,
  );

  // Per-bundle create and edit permissions.
  if (!empty($entity_info['entity keys']['bundle'])) {
    foreach ($entity_info['bundles'] as $bundle_name => $bundle_info) {
      $permissions += erpal_core_bundle_access_permissions($bundle_name, $bundle_info, $entity_type, $entity_info);
    }

  }

  return $permissions;
}

/**
 * Define per-bundle permissions.
 */
function erpal_core_bundle_access_permissions($bundle_name, $bundle_info, $entity_type, $entity_info = array()) {
  $labels = $entity_info['permission labels'];

  $permissions['create ' . $entity_type . ' entities of bundle ' . $bundle_name] = array(
    'title' => t('Create %bundle @entity_type', array('@entity_type' => $labels['plural'], '%bundle' => $bundle_info['label'])),
  );
  if (!empty($entity_info['access arguments']['user key'])) {
    $permissions['edit own ' . $entity_type . ' entities of bundle ' . $bundle_name] = array(
      'title' => t('Edit own %bundle @entity_type', array('@entity_type' => $labels['plural'], '%bundle' => $bundle_info['label'])),
    );
  }
  $permissions['edit any ' . $entity_type . ' entity of bundle ' . $bundle_name] = array(
    'title' => t('Edit any %bundle @entity_type', array('@entity_type' => $labels['singular'], '%bundle' => $bundle_info['label'])),
    'restrict access' => TRUE,
  );
  if (!empty($entity_info['access arguments']['user key'])) {
    $permissions['delete own ' . $entity_type . ' entities of bundle ' . $bundle_name] = array(
      'title' => t('Delete own %bundle @entity_type', array('@entity_type' => $labels['plural'], '%bundle' => $bundle_info['label'])),
    );
  }
  $permissions['delete any ' . $entity_type . ' entity of bundle ' . $bundle_name] = array(
    'title' => t('Delete any %bundle @entity_type', array('@entity_type' => $labels['singular'], '%bundle' => $bundle_info['label'])),
    'restrict access' => TRUE,
  );
  if (!empty($entity_info['access arguments']['user key'])) {
    $permissions['view own ' . $entity_type . ' entities of bundle ' . $bundle_name] = array(
      'title' => t('View own %bundle @entity_type', array('@entity_type' => $labels['plural'], '%bundle' => $bundle_info['label'])),
    );
  }
  $permissions['view any ' . $entity_type . ' entity of bundle ' . $bundle_name] = array(
    'title' => t('View any %bundle @entity_type', array('@entity_type' => $labels['singular'], '%bundle' => $bundle_info['label'])),
    'restrict access' => TRUE,
  );

  return $permissions;
}

/**
 * Create fields/instance.
 *
 * @param array $data
 *   It's can be array of fields or instance.
 * @param string $type
 *   can be 'field' or 'instance'.
 */
function erpal_core_add_fields($data, $type) {
  $info = 'field_info_' . $type;
  $create = 'field_create_' . $type;
  foreach ($data as $item) {

    if ($type == 'instance') {
      $exists = $info($item['entity_type'], $item['field_name'], $item['bundle']);
    }
    else {
      $exists = $info($item['field_name']);
    }

    if (empty($exists)) {
      $create($item);
    }
  }
}

/**
 * Generate array with correct local tasks and add to site.
 *
 * @param array $data
 *   Arrau with all site data.
 * @param array $local_tasks
 *   Array with local tasks.
 * @param string $root_path
 *   String with current path.
 */
function erpal_core_add_local_actions(&$data, $local_tasks, $root_path) {
  foreach ($local_tasks as $local_task) {
    if ($root_path == $local_task['root_path']) {
      $item = menu_get_item($local_task['menu_item']);
      if ($item['access']) {

        // If title is empty just add 'Create quote' by default.
        $item['title'] = 'Create a Quote';
        if (!empty($local_task['title'])) {
          $item['title'] = $local_task['title'];
        }

        // If query is empty just add destination by default.
        $item['localized_options']['query'] = drupal_get_destination();
        if (isset($local_task['query'])) {
          $item['localized_options']['query'] = $local_task['query'];
        }

        $data['actions']['output'][] = array(
          '#theme' => 'menu_local_action',
          '#link' => $item,
        );
      }
    }
  }
}

/**
 * Generate array with units time.
 */
function erpal_core_units_time() {
  return array(
    'hour' => 'Hour',
    'day'  => 'Day',
    'week'  => 'Week',
    'month' => 'Month',
  );
}
